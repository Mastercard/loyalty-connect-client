/*
 * Mastercard Loyalty Connect Service
 * Connecting payment and retail loyalty into a single checkout experience
 *
 * The version of the OpenAPI document: 2.2.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mastercard_loyalty_connect_client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

/**
 * Address
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-07T19:05:09.264+05:30[Asia/Calcutta]")
public class Address {
    public static final String SERIALIZED_NAME_COUNTRY = "country";
    public static final String SERIALIZED_NAME_STREETS = "streets";
    public static final String SERIALIZED_NAME_COORDINATES = "coordinates";
    @SerializedName(SERIALIZED_NAME_COUNTRY)
    private String country;
    @SerializedName(SERIALIZED_NAME_STREETS)
    private List<String> streets = new ArrayList<String>();
    @SerializedName(SERIALIZED_NAME_COORDINATES)
    private Coordinates coordinates;


    public Address country(String country) {

        this.country = country;
        return this;
    }

    /**
     * Country of business partner or it&#39;s store
     *
     * @return country
     **/
    @ApiModelProperty(example = "UK", required = true, value = "Country of business partner or it's store")

    public String getCountry() {
        return country;
    }


    public void setCountry(String country) {
        this.country = country;
    }


    public Address streets(List<String> streets) {

        this.streets = streets;
        return this;
    }

    public Address addStreetsItem(String streetsItem) {
        this.streets.add(streetsItem);
        return this;
    }

    /**
     * Address of business partner or it&#39;s store
     *
     * @return streets
     **/
    @ApiModelProperty(example = "1 Notting Hill High Street", required = true, value = "Address of business partner or it's store")

    public List<String> getStreets() {
        return streets;
    }


    public void setStreets(List<String> streets) {
        this.streets = streets;
    }


    public Address coordinates(Coordinates coordinates) {

        this.coordinates = coordinates;
        return this;
    }

    /**
     * Get coordinates
     *
     * @return coordinates
     **/
    @javax.annotation.Nullable
    @ApiModelProperty(value = "")

    public Coordinates getCoordinates() {
        return coordinates;
    }


    public void setCoordinates(Coordinates coordinates) {
        this.coordinates = coordinates;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Address address = (Address) o;
        return Objects.equals(this.country, address.country) &&
                Objects.equals(this.streets, address.streets) &&
                Objects.equals(this.coordinates, address.coordinates);
    }

    @Override
    public int hashCode() {
        return Objects.hash(country, streets, coordinates);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Address {\n");
        sb.append("    country: ").append(toIndentedString(country)).append("\n");
        sb.append("    streets: ").append(toIndentedString(streets)).append("\n");
        sb.append("    coordinates: ").append(toIndentedString(coordinates)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}


/*
 * Mastercard Loyalty Connect Service
 * Connecting payment and retail loyalty into a single checkout experience
 *
 * The version of the OpenAPI document: 2.2.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mastercard_loyalty_connect_client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Coordinates
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-09-07T19:05:09.264+05:30[Asia/Calcutta]")
public class Coordinates {
    public static final String SERIALIZED_NAME_LATITUDE = "latitude";
    public static final String SERIALIZED_NAME_LONGITUDE = "longitude";
    @SerializedName(SERIALIZED_NAME_LATITUDE)
    private Long latitude;
    @SerializedName(SERIALIZED_NAME_LONGITUDE)
    private Long longitude;


    public Coordinates latitude(Long latitude) {

        this.latitude = latitude;
        return this;
    }

    /**
     * latitude id associated with payment terminal
     *
     * @return latitude
     **/
    @ApiModelProperty(required = true, value = "latitude id associated with payment terminal")

    public Long getLatitude() {
        return latitude;
    }


    public void setLatitude(Long latitude) {
        this.latitude = latitude;
    }


    public Coordinates longitude(Long longitude) {

        this.longitude = longitude;
        return this;
    }

    /**
     * longitude of business partner or it&#39;s store
     *
     * @return longitude
     **/
    @ApiModelProperty(required = true, value = "longitude of business partner or it's store")

    public Long getLongitude() {
        return longitude;
    }


    public void setLongitude(Long longitude) {
        this.longitude = longitude;
    }


    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        Coordinates coordinates = (Coordinates) o;
        return Objects.equals(this.latitude, coordinates.latitude) &&
                Objects.equals(this.longitude, coordinates.longitude);
    }

    @Override
    public int hashCode() {
        return Objects.hash(latitude, longitude);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class Coordinates {\n");
        sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
        sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}


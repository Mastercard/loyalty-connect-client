/*
 * Mastercard Loyalty Connect Service
 * Connecting payment and retail loyalty into a single checkout experience
 *
 * The version of the OpenAPI document: 2.2.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mastercard_loyalty_connect_client.api;

import com.mastercard.developer.mastercard_loyalty_connect_client.ApiException;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberRefIdError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.PaymentCard;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.PaymentCardAlreadyEnrolledError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.PaymentCardDetails;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.PaymentCardResponse;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.ServiceUnAvailableError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.UnAuthAccessError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PaymentCardApi
 */
@Ignore
public class PaymentCardApiTest {

    private final PaymentCardApi api = new PaymentCardApi();

    
    /**
     * Disconnects a payment card for a member
     *
     * Deletes a payment card connected by the member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deletePaymentCardTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String paymentCardReferenceId = null;
        api.deletePaymentCard(xMerchantKey, memberReferenceId, paymentCardReferenceId);

        // TODO: test validations
    }
    
    /**
     * Connect payment card for a member
     *
     * Connects payment card for an existing member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enrollPaymentCardTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        PaymentCard paymentCard = null;
        PaymentCardResponse response = api.enrollPaymentCard(xMerchantKey, memberReferenceId, paymentCard);

        // TODO: test validations
    }
    
    /**
     * Get payment card details for a member
     *
     * Returns details for a specific payment card connected by the member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentCardDetailsTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String paymentCardReferenceId = null;
        PaymentCardDetails response = api.getPaymentCardDetails(xMerchantKey, memberReferenceId, paymentCardReferenceId);

        // TODO: test validations
    }
    
    /**
     * Get all payment cards for a member
     *
     * Returns all the payment cards connected by a member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPaymentCardsTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        PaymentCardDetails response = api.getPaymentCards(xMerchantKey, memberReferenceId);

        // TODO: test validations
    }
    
    /**
     * Update a payment card for a member
     *
     * Updates the details of a specific payment card connected by the member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updatePaymentCardTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String paymentCardReferenceId = null;
        PaymentCard paymentCard = null;
        api.updatePaymentCard(xMerchantKey, memberReferenceId, paymentCardReferenceId, paymentCard);

        // TODO: test validations
    }
    
}

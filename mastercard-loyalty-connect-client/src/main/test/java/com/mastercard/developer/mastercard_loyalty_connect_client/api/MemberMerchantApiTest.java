/*
 * Mastercard Loyalty Connect Service
 * Connecting payment and retail loyalty into a single checkout experience
 *
 * The version of the OpenAPI document: 2.2.1
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mastercard_loyalty_connect_client.api;

import com.mastercard.developer.mastercard_loyalty_connect_client.ApiException;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.LoyaltyProgram;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberMerchantAlreadyJoinedError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberMerchantLoyaltyDetails;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberRefIdError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MerchantLoyaltyProgram;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MerchantLoyaltyProgramResponse;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MerchantLoyaltyProgramSearchResponse;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.ServiceUnAvailableError;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.UnAuthAccessError;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MemberMerchantApi
 */
@Ignore
public class MemberMerchantApiTest {

    private final MemberMerchantApi api = new MemberMerchantApi();

    
    /**
     * Disconnect a loyalty program for a member
     *
     * Deletes an existing Member and Merchant Loyalty Program association
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMemberMerchantLoyaltyProgramTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String memberMerchantReferenceId = null;
        api.deleteMemberMerchantLoyaltyProgram(xMerchantKey, memberReferenceId, memberMerchantReferenceId);

        // TODO: test validations
    }
    
    /**
     * Get loyalty programs for a member
     *
     * Returns all loyalty programs in which the member is enrolled. If the member wants to view the details for a specific Merchant Loyalty program the member is enrolled in, then merchant code and Loyalty ID must be provided.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllMemberMerchantLoyaltyProgramTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String loyaltyId = null;
        String merchantCode = null;
        MerchantLoyaltyProgramSearchResponse response = api.getAllMemberMerchantLoyaltyProgram(xMerchantKey, memberReferenceId, loyaltyId, merchantCode);

        // TODO: test validations
    }
    
    /**
     * Get details for a specific Merchant Loyalty Program
     *
     * Returns Loyalty ID and point balance for a specific Merchant Loyalty Program associated with the member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberMerchantLoyaltyProgramTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String memberMerchantReferenceId = null;
        MemberMerchantLoyaltyDetails response = api.getMemberMerchantLoyaltyProgram(xMerchantKey, memberReferenceId, memberMerchantReferenceId);

        // TODO: test validations
    }
    
    /**
     * Enroll a member in a Merchant Loyalty Program
     *
     * Enrolls the member in a Merchant Loyalty Program. Alternately, the member can connect an existing Loyalty ID for the Merchant Loyalty Program.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void joinOrConnectMerchantLoyaltyProgramTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        MerchantLoyaltyProgram merchantLoyaltyProgram = null;
        MerchantLoyaltyProgramResponse response = api.joinOrConnectMerchantLoyaltyProgram(xMerchantKey, memberReferenceId, merchantLoyaltyProgram);

        // TODO: test validations
    }
    
    /**
     * Update member Merchant Loyalty Program
     *
     * Updates the Merchant Loyalty Program for an existing member in MLC.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMerchantLoyaltyProgramTest() throws ApiException {
        String xMerchantKey = null;
        String memberReferenceId = null;
        String memberMerchantReferenceId = null;
        LoyaltyProgram loyaltyProgram = null;
        api.updateMerchantLoyaltyProgram(xMerchantKey, memberReferenceId, memberMerchantReferenceId, loyaltyProgram);

        // TODO: test validations
    }
    
}

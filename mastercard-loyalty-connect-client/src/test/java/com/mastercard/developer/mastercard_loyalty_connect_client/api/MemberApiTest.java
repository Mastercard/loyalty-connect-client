/*
 * Mastercard Loyalty Connect Service
 * Rest Service for linking payment cards with loyalty programme
 *
 * OpenAPI spec version: 1.0
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.mastercard_loyalty_connect_client.api;

import com.mastercard.developer.mastercard_loyalty_connect_client.ApiException;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.Error;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.Member;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberDetails;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberMerchantResponse;
import com.mastercard.developer.mastercard_loyalty_connect_client.model.MemberResponse;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MemberApi
 */
@Ignore
public class MemberApiTest {

    private final MemberApi api = new MemberApi();

    
    /**
     * Delete a member
     *
     * This API is called when an existing member opts out of MLC. All information related to the member is deleted whenever this API is called.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteMemberTest() throws ApiException {
        String memberReferenceId = null;
        String xMerchantKey = null;
        api.deleteMember(memberReferenceId, xMerchantKey);

        // TODO: test validations
    }
    
    /**
     * Enroll a member
     *
     * Enrolls a new member in MLC. Every member is identified by the business partner (partner code) and member identifier (user id). The member may or may not provide other demographic information for enrollment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void enrollMemberTest() throws ApiException {
        Member member = null;
        String xMerchantKey = null;
        MemberMerchantResponse response = api.enrollMember(member, xMerchantKey);

        // TODO: test validations
    }
    
    /**
     * Get a Member
     *
     * Returns the demographic information related to the existing MLC Member.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getMemberTest() throws ApiException {
        String memberReferenceId = null;
        String xMerchantKey = null;
        MemberResponse response = api.getMember(memberReferenceId, xMerchantKey);

        // TODO: test validations
    }
    
    /**
     * Update a member
     *
     * Updates the demographic information for an existing member in MLC. The member may or may not provide all demographic information.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateMemberTest() throws ApiException {
        String memberReferenceId = null;
        MemberDetails memberDetails = null;
        String xMerchantKey = null;
        api.updateMember(memberReferenceId, memberDetails, xMerchantKey);

        // TODO: test validations
    }
    
}

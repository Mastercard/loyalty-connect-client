openapi: 3.0.1
info:
  title: Mastercard Loyalty Connect Service
  description: Connecting payment and retail loyalty into a single checkout experience
  termsOfService: 'https://developer.mastercard.com/terms-of-use'
  contact:
    name: Mastercard Developer Zone
    url: 'https://developer.mastercard.com'
    email: apisupport@mastercard.com
  license:
    name: Mastercard Developer Zone Support
    url: 'https://developer.mastercard.com/support'
  version: 2.2.6
servers:
  - url: 'api.mastercard.com'
    description: Generated server url
tags:
  - name: Member
    description: Operations related to a member
  - name: Merchant
    description: Operations related to merchants
  - name: BusinessPartnerStores
    description: Operations related to the company stores
  - name: PaymentCard
    description: Operations related to payment card
  - name: Transaction
    description: Operations related to transactions
  - name: LoyaltyConnect
    description: Operations related to loyalty connect
  - name: MemberMerchant
    description: Operations related to member merchant
paths:
  /business-partner-stores:
    post:
      tags:
        - BusinessPartnerStores
      summary: Store company location details
      description: Store a company location into Mastercard Loyalty Connect (MLC)
      operationId: createOrUpdateBusinessPartnerLocations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessPartnerStoreDetails'
        required: true
      responses:
        '200':
          description: Successfully enrolled business partner location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BusinessPartnerStoreResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Invalid access request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  '/members/{member_reference_id}/loyalty-connects':
    get:
      tags:
        - LoyaltyConnect
      summary: Get payment card and Loyalty ID connection details for a member
      description: 'Returns all payment card and Loyalty ID connections for the member. If the member wants to view the payment cards connected for a specific Loyalty ID, then the member merchant reference key must be provided. If the member wants to view the Loyalty IDs connected for a specific payment card, then the payment card reference key must be provided.'
      operationId: getLoyaltyConnects
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: member_merchant_reference_id
          in: query
          description: Unique reference key that identifies member and merchant loyalty program association
          required: true
          schema:
            type: string
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
        - name: payment_card_reference_id
          in: query
          description: Unique reference key for a member's payment card
          required: true
          schema:
            type: string
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
      responses:
        '200':
          description: Loyalty Connects are successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyConnectResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    post:
      tags:
        - LoyaltyConnect
      summary: Connects payment card and Loyalty ID for a member
      description: Connects a member's payment card with Loyalty ID. The member must have the payment card and Loyalty ID enrolled before making this connection.
      operationId: enrollLoyaltyConnect
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: false
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      requestBody:
        description: Contains payment card and loyalty program details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyConnect'
        required: true
      responses:
        '201':
          description: Successfully connected payment card to loyalty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrollLoyaltyConnectResponse'
        '400':
           description: Member reference id not found
           content:
             application/json:
               schema:
                 $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/loyalty-connects/{loyalty_connect_reference_id}':
    get:
      tags:
        - LoyaltyConnect
      summary: Get a specific Loyalty ID and payment card connection details for a member
      description: Returns the Loyalty ID and payment card details for a member if the Loyalty ID exists as connected with the payment card based on the unique reference key for the connection.
      operationId: getLoyaltyConnect
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: loyalty_connect_reference_id
          in: path
          description: Unique reference key for the connection of a loyalty ID and payment card
          required: true
          schema:
            type: string
          example: f962ad86-d408-467c-8b74-14983569d36c
      responses:
        '200':
          description: Loyalty Connect is successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoyaltyConnectResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    delete:
      tags:
        - LoyaltyConnect
      summary: Disconnects a specific payment card and Loyalty ID for a member
      description: Returns the Loyalty ID and payment card details for a member if the Loyalty ID exists as connected Delete a specific Loyalty ID and payment card connection for a member based on the unique reference key for the connection.
      operationId: deleteLoyaltyConnect
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: loyalty_connect_reference_id
          in: path
          description: Unique reference key for the connection of a loyalty ID and payment card
          required: true
          schema:
            type: string
          example: f962ad86-d408-467c-8b74-14983569d36c
      responses:
        '202':
          description: Loyalty Connect successfully deleted
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}':
    get:
      tags:
        - Member
      summary: Get a Member
      description: Returns the demographic information related to the existing MLC Member.
      operationId: getMember
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      responses:
        '200':
          description: Member is successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    put:
      tags:
        - Member
      summary: Update a member
      description: Updates the demographic information for an existing member in MLC. The member may or may not provide all demographic information.
      operationId: updateMember
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      requestBody:
        description: 'In order to update the demographic information for a member, the unique reference key must be provided. The member must be an existing one in MLC based on the unique reference key. The member may or may not provide all demographic information for update.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberDetails'
        required: true
      responses:
        '204':
          description: Member is updated successfully
          content:
            application/json: {}
        '400':
          description: Member does not exist
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    delete:
      tags:
        - Member
      summary: Delete a member
      description: This API is called when an existing member opts out of MLC. All information related to the member is deleted whenever this API is called.
      operationId: deleteMember
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      responses:
        '202':
          description: Member is successfully deleted
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/searches':
      post:
        tags:
          - Member
        summary: Searches a member
        description: Searches a member in MLC based on the user id provided in the input and returns all details related to the member, if found. The user id is considered case sensitive for searching the member i.e. 'vk@mastercard.com' is a different user id from 'VK@mastercard.com'.
        operationId: searchMember
        parameters:
          - name: X-Merchant-Key
            in: header
            description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
            required: true
            schema:
              type: string
            example: 108d9290-5516-4235-ac0d-fddb04c6b003
        requestBody:
          description: 'In order to search a member, user ID attributes must be provided'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberSearch'
          required: true
        responses:
          '200':
            description: Member is successfully retrieved
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/MemberResponse'
          '400':
            description: Invalid Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
          '401':
            description: Unauthorized access to information
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UnAuthAccessError'
          '500':
            description: Service not available
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ServiceUnAvailableError'
  /members:
    post:
      tags:
        - Member
      summary: Enroll a member
      description: Enrolls a new member in MLC. Every member is identified by the business partner (partner code) and member identifier (user id). The member may or may not provide other demographic information for enrollment. The user id is considered case sensitive for member enrollment i.e. 'vk@mastercard.com' and 'VK@mastercard.com' will result in 2 members being enrolled.
      operationId: enrollMember
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
      requestBody:
        description: 'In order to enroll a member, the partner code, user type and user ID attributes must be provided along with other optional demographic data attributes. The user type can be either ''BANK_CUSTOMER_NUMBER'' or ''MERCHANT_LOYALTY_ID'' depending on the business partner setup.'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
        required: true
      responses:
        '201':
          description: Successfully connected payment card to loyalty
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberMerchantResponse'
        '400':
          description: Invalid Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/loyalty-programs':
    get:
      tags:
        - MemberMerchant
      summary: Get loyalty programs for a member
      description: 'Returns all loyalty programs in which the member is enrolled. If the member wants to view the details for a specific Merchant Loyalty program the member is enrolled in, then merchant code and Loyalty ID must be provided.'
      operationId: getAllMemberMerchantLoyaltyProgram
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: loyalty_id
          in: query
          description: Loyalty Id represents unique member merchant association
          required: false
          schema:
            type: string
          example: vk@mastercard.com
        - name: merchant_code
          in: query
          description: Unique code assigned to a merchant on boarded with MLC
          required: false
          schema:
            type: string
          example: MLCMerchant
      responses:
        '200':
          description: Successfully filtered merchant loyalty program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantLoyaltyProgramSearchResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    post:
      tags:
        - MemberMerchant
      summary: Enroll a member in a Merchant Loyalty Program
      description: 'Enrolls the member in a Merchant Loyalty Program. Alternately, the member can connect an existing Loyalty ID for the Merchant Loyalty Program.'
      operationId: joinOrConnectMerchantLoyaltyProgram
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      requestBody:
        description: Contains merchant loyalty program details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantLoyaltyProgram'
        required: true
      responses:
        '201':
          description: Successfully joined/connected in Merchant Loyalty Program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantLoyaltyProgramResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '409':
          description: Member has already joined/connected to merchant loyalty program
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberMerchantAlreadyJoinedError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/loyalty-programs/{member_merchant_reference_id}':
    get:
      tags:
        - MemberMerchant
      summary: Get details for a specific Merchant Loyalty Program
      description: Returns Loyalty ID and point balance for a specific Merchant Loyalty Program associated with the member.
      operationId: getMemberMerchantLoyaltyProgram
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: member_merchant_reference_id
          in: path
          description: Unique reference key that identifies member and merchant loyalty program association
          required: true
          schema:
            type: string
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
      responses:
        '200':
          description: Merchant loyalty program retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberMerchantLoyaltyDetails'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    delete:
      tags:
        - MemberMerchant
      summary: Disconnect a loyalty program for a member
      description: Deletes an existing Member and Merchant Loyalty Program association
      operationId: deleteMemberMerchantLoyaltyProgram
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: member_merchant_reference_id
          in: path
          description: Unique reference key that identifies member and merchant loyalty program association
          required: true
          schema:
            type: string
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
      responses:
        '202':
          description: Merchant loyalty program deleted successfully
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/loyalty-programs/{member_merchant_reference_id}/loyalty-id':
    put:
      tags:
        - MemberMerchant
      summary: Update member Merchant Loyalty Program
      description: Updates the Merchant Loyalty Program for an existing member in MLC.
      operationId: updateMerchantLoyaltyProgram
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: member_merchant_reference_id
          in: path
          description: Unique reference key that identifies member and merchant loyalty program association
          required: true
          schema:
            type: string
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoyaltyProgram'
        required: true
      responses:
        '204':
          description: Merchant loyalty program is updated successfully
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  /merchants:
    get:
      tags:
        - Merchant
      summary: Get Merchants
      description: Get all on-boarded merchants
      operationId: getMerchants
      responses:
        '200':
          description: Merchant loyalty program retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Merchant'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/payment-cards/{payment_card_reference_id}':
    get:
      tags:
        - PaymentCard
      summary: Get payment card details for a member
      description: Returns details for a specific payment card connected by the member.
      operationId: getPaymentCardDetails
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: payment_card_reference_id
          in: path
          description: Unique reference key for a member's payment card
          required: true
          schema:
            type: string
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
      responses:
        '200':
          description: Payment Card successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCardDetails'
        '400':
          description: Member reference id should not be blank
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    put:
      tags:
        - PaymentCard
      summary: Update a payment card for a member
      description: Updates the details of a specific payment card connected by the member.
      operationId: updatePaymentCard
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: payment_card_reference_id
          in: path
          description: Unique reference key for a member's payment card
          required: true
          schema:
            type: string
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
      requestBody:
        description: Contains payment card details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCard'
        required: true
      responses:
        '204':
          description: Payment Card is successfully updated
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    delete:
      tags:
        - PaymentCard
      summary: Disconnects a payment card for a member
      description: Deletes a payment card connected by the member.
      operationId: deletePaymentCard
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
        - name: payment_card_reference_id
          in: path
          description: Unique reference key for a member's payment card
          required: true
          schema:
            type: string
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
      responses:
        '202':
          description: Payment card is successfully deleted
          content:
            application/json: {}
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  '/members/{member_reference_id}/payment-cards':
    get:
      tags:
        - PaymentCard
      summary: Get all payment cards for a member
      description: Returns all the payment cards connected by a member.
      operationId: getPaymentCards
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      responses:
        '200':
          description: Payment Cards successfully fetched
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCardDetails'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
    post:
      tags:
        - PaymentCard
      summary: Connect payment card for a member
      description: Connects payment card for an existing member.
      operationId: enrollPaymentCard
      parameters:
        - name: X-Merchant-Key
          in: header
          description: Key assigned to a 'Merchant' Business Partner at the time of onboarding
          required: true
          schema:
            type: string
          example: 108d9290-5516-4235-ac0d-fddb04c6b003
        - name: member_reference_id
          in: path
          description: Unique reference key for a member
          required: true
          schema:
            type: string
          example: kT87TFbPtw6z100047
      requestBody:
        description: Contains payment card details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentCard'
        required: true
      responses:
        '201':
          description: Successfully enrolled payment card for given partner code
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCardResponse'
        '400':
          description: Member reference id not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MemberRefIdError'
        '409':
          description: Payment Card already enrolled for the member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentCardAlreadyEnrolledError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
  /loyalty-ids/searches:
    post:
      tags:
        - Transaction
      summary: Get loyalty id
      description: Returns the Loyalty ID connected with a payment card for a specific Merchant. This API is called when a Member transacts using a payment card connected in MLC at a participating Merchant store.
      operationId: getLoyaltyId
      requestBody:
        description: The payment card number and merchant code / identifier must be provided in the request body to retrieve the Loyalty ID
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Transaction'
        required: true
      responses:
        '200':
          description: Successfully returned loyalty id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
        '400':
          description: Invalid Key Serial Number
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionKsnError'
        '401':
          description: Unauthorized access to information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnAuthAccessError'
        '500':
          description: Service not available
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnAvailableError'
components:
  schemas:
    DetailItem:
      type: object
      properties:
        name:
          type: string
          description: Name of the field with error
          example: email
        value:
          type: string
          description: Reason for the error
          example: Invalid email format
    Error:
      required:
        - Errors
      type: object
      properties:
        Errors:
          $ref: '#/components/schemas/Errors'
    ErrorItem:
      type: object
      properties:
        Source:
          type: string
          description: Source of the error
          example: Input parameters
        ReasonCode:
          type: string
          description: Reason code indicating type of the error
          example: BAD_REQUEST
        Description:
          type: string
          description: Description of the error
          example: Invalid request
        Recoverable:
          type: boolean
          description: Indicates if the error is recoverable when the same payload is submitted again
          example: false
        Details:
          type: array
          items:
            $ref: '#/components/schemas/DetailItem'
    Errors:
      required:
        - Error
      type: object
      properties:
        Error:
          type: array
          items:
            $ref: '#/components/schemas/ErrorItem'
    PaymentCardAlreadyEnrolledError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/PaymentCardAlreadyEnrolledErrorItem'
    PaymentCardAlreadyEnrolledErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: ENROLL_PAYMENT_CARD
            ReasonCode:
              type: string
              example: PAYMENT_CARD_ALREADY_ENROLLED
            Description:
              type: string
              example: Payment Card already enrolled for the member
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    UnAuthAccessError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/UnAuthAccessErrorItem'
    UnAuthAccessErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: Service
            ReasonCode:
              type: string
              example: UNAUTHORIZED_ACCESS
            Description:
              type: string
              example: Unauthorized access to information
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    ServiceUnAvailableError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/ServiceUnAvailableErrorItem'
    ServiceUnAvailableErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: Downstream Service
            ReasonCode:
              type: string
              example: SERVICE_FAIL
            Description:
              type: string
              example: Downstream service not available
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    TransactionKsnError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/TransactionKsnErrorItem'
    TransactionKsnErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: Transaction
            ReasonCode:
              type: string
              example: INVALID_KSN
            Description:
              type: string
              example: Invalid Key Serial Number
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    MemberRefIdError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/MemberRefIdErrorItem'
    MemberRefIdErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: Member
            ReasonCode:
              type: string
              example: MEMBER_NOT_FOUND
            Description:
              type: string
              example: Member not found for given partner code
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    MemberMerchantAlreadyJoinedError:
          required:
            - Errors
          type: object
          properties:
            Errors:
              type: object
              required:
                - Error
              properties:
                Error:
                  type: array
                  items:
                        $ref: '#/components/schemas/MemberMerchantAlreadyJoinedErrorItem'
    MemberMerchantAlreadyJoinedErrorItem:
          type: object
          properties:
            Source:
              type: string
              example: memberMerchantEnrollment
            ReasonCode:
              type: string
              example: MERCHANT_LOYALTY_PROGRAM_ALREADY_ENROLLED
            Description:
              type: string
              example: Member has already joined/connected to merchant loyalty program
            Recoverable:
              type: boolean
              example: false
            Details:
              type: string
              example: null
    Address:
      required:
        - country
        - streets
      type: object
      properties:
        country:
          type: string
          description: Country of business partner or it's store
          example: UK
        streets:
          type: array
          description: Address of business partner or it's store
          example: 1 Notting Hill High Street
          items:
            type: string
            description: Address of business partner or it's store
            example: 1 Notting Hill High Street
        coordinates:
          $ref: '#/components/schemas/Coordinates'
    Business:
      type: object
      properties:
        name:
          type: string
          description: name of business partner or it's store
          example: IRC Production
    BusinessPartnerStoreDetails:
      type: object
      properties:
        devices:
          type: array
          items:
            $ref: '#/components/schemas/Device'
        company:
          $ref: '#/components/schemas/Company'
        store:
          $ref: '#/components/schemas/Store'
    Company:
      required:
        - key
      type: object
      properties:
        utcOffset:
          type: integer
          description: utc_offset associated with business partner or it's store
          format: int32
          example: 0
        name:
          type: string
          description: name of business partner or it's store
          example: B&G Manchester/IRC Production
        shortName:
          type: string
          description: short name of business partner or it's store
          example: IRC
        title:
          type: string
          description: short name of business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
        locale:
          type: string
          description: locale of business partner or it's store
          example: en_GB
        country:
          type: string
          description: country of business partner or it's store
          example: UK
        timeZone:
          type: string
          description: time zone of business partner or it's store
          example: Europe/London
        telephone:
          $ref: '#/components/schemas/Telephone'
        business:
          $ref: '#/components/schemas/Business'
        emailAddress:
          type: string
          description: email address of business partner or it's store
          example: Manchester@individualrestaurants.com
        tags:
          type: array
          description: tag associated with business partner or it's store
          example: Manchester@individualrestaurants.com
          items:
            type: string
            description: tag associated with business partner or it's store
            example: Manchester@individualrestaurants.com
        meta:
          $ref: '#/components/schemas/Meta'
        key:
          type: string
          description: key associated with business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
        address:
          $ref: '#/components/schemas/Address'
        taxNumber:
          type: string
          description: tax_number associated with business partner or it's store
          example: GB834862994
        externalId:
          type: string
          description: external id associated with with business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
    Coordinates:
      required:
        - latitude
        - longitude
      type: object
      properties:
        latitude:
          type: integer
          description: latitude id associated with payment terminal
          format: int64
        longitude:
          type: integer
          description: longitude of business partner or it's store
          format: int64
    Creation:
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/Datetime'
    Datetime:
      type: object
      properties:
        utc:
          type: integer
          description: utc associated with date time of business partner or it's store
          format: int64
        local:
          type: string
          description: local with date time of business partner or it's store
          format: date-time
    Daytime:
      type: object
      properties:
        text:
          type: string
          description: text of business partner or it's store
          example: 0161 839 1999
    Device:
      required:
        - key
      type: object
      properties:
        key:
          type: string
          description: terminal id associated with payment terminal
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
    Key:
      type: object
      properties:
        application:
          type: string
          description: application associated with business partner or it's store
          example: e~yreceipts-prod-uk
        urlsafe:
          type: string
          description: urlsafe associated with business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrch0LEhBCdXNpbmVzc0xvY2F0aW9uGICAwNXo_uoKDA
        namespace:
          type: string
          description: namespace associated with business partner or it's store
          example: namespace
        paths:
          type: array
          items:
            $ref: '#/components/schemas/Path'
    Meta:
      type: object
      properties:
        modification:
          $ref: '#/components/schemas/Modification'
        creation:
          $ref: '#/components/schemas/Creation'
        key:
          $ref: '#/components/schemas/Key'
    Modification:
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/Datetime'
    Path:
      type: object
      properties:
        kind:
          type: string
          description: kind associated with business partner or it's store
          example: BusinessLocation
        id:
          type: integer
          description: id associated with business partner or it's store
          format: int64
          example: 6100049888018432
    Store:
      required:
        - key
      type: object
      properties:
        utcOffset:
          type: integer
          description: utc_offset associated with business partner or it's store
          format: int32
          example: 0
        name:
          type: string
          description: name of business partner or it's store
          example: B&G Manchester/IRC Production
        shortName:
          type: string
          description: short name of business partner or it's store
          example: IRC
        title:
          type: string
          description: short name of business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
        locale:
          type: string
          description: locale of business partner or it's store
          example: en_GB
        country:
          type: string
          description: country of business partner or it's store
          example: UK
        timeZone:
          type: string
          description: time zone of business partner or it's store
          example: Europe/London
        telephone:
          $ref: '#/components/schemas/Telephone'
        business:
          $ref: '#/components/schemas/Business'
        emailAddress:
          type: string
          description: email address of business partner or it's store
          example: Manchester@individualrestaurants.com
        tags:
          type: array
          description: tag associated with business partner or it's store
          example: Manchester@individualrestaurants.com
          items:
            type: string
            description: tag associated with business partner or it's store
            example: Manchester@individualrestaurants.com
        meta:
          $ref: '#/components/schemas/Meta'
        key:
          type: string
          description: key associated with business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
        address:
          $ref: '#/components/schemas/Address'
        taxNumber:
          type: string
          description: tax_number associated with business partner or it's store
          example: GB834862994
        externalId:
          type: string
          description: external id associated with with business partner or it's store
          example: ahNlfnlyZWNlaXB0cy1wcm9kLXVrchYLEglQb3NEZXZpY2UYgIDApdqllAoM
    Telephone:
      type: object
      properties:
        daytime:
          $ref: '#/components/schemas/Daytime'
    BusinessPartnerStoreResponse:
      required:
        - businessPartnerStoreId
        - storeReferenceId
      type: object
      properties:
        businessPartnerStoreId:
          type: string
          description: BusinessPartnerStoreDetails Identity
          example: G3243423J4534
        storeReferenceId:
          type: string
          description: Unique reference key for business partner location
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb767589
    LoyaltyConnect:
      required:
        - memberMerchantReferenceId
        - paymentCardReferenceId
      type: object
      properties:
        paymentCardReferenceId:
          type: string
          description: Unique reference key for the connection of a loyalty ID and payment card
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
        memberMerchantReferenceId:
          type: string
          description: Unique reference key that identifies member and merchant loyalty program association
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
    EnrollLoyaltyConnectResponse:
      required:
        - loyaltyConnectReferenceId
      type: object
      properties:
        loyaltyConnectReferenceId:
          type: string
          description: Unique reference key for the connection of a loyalty ID and payment card
          example: f962ad86-d408-467c-8b74-14983569d36c
    LoyaltyConnectResponse:
      required:
        - bankCardNumber
        - loyaltyConnectReferenceId
        - loyaltyId
        - memberMerchantReferenceId
        - merchantCode
        - paymentCardReferenceId
      type: object
      properties:
        bankCardNumber:
          type: string
          description: Payment Card number that represents a valid card the MLC user wants to connect
          example: XXXXXXXXXXXX4444
        merchantCode:
          type: string
          description: Unique code assigned to a merchant on boarded with MLC
          example: MLCMerchant
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
        paymentCardReferenceId:
          type: string
          description: Unique reference key for a member's payment card
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
        memberMerchantReferenceId:
          type: string
          description: Unique reference key that identifies member and merchant loyalty program association
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
        loyaltyConnectReferenceId:
          type: string
          description: Unique reference key for the connection of a loyalty ID and payment card
          example: f962ad86-d408-467c-8b74-14983569d36c
    MemberMerchantLoyaltyDetails:
      required:
        - loyaltyId
        - memberMerchantReferenceId
      type: object
      properties:
        merchantCode:
          type: string
          description: Unique code assigned to a merchant on boarded with MLC
          example: MLCMerchant
        merchantName:
          type: string
          description: Merchant name
          example: MLCMerchant
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
        pointBalance:
          type: number
          description: Point balance present for a particular merchant loyalty program
          format: double
          example: 100.27
        memberMerchantReferenceId:
          type: string
          description: Unique reference key that identifies member and merchant loyalty program association
          example: Unique reference key that identifies member and merchant loyalty program association
    MemberResponse:
      required:
        - memberReferenceId
      type: object
      properties:
        memberReferenceId:
          type: string
          description: Unique reference key for a member
          example: kT87TFbPtw6z100047
        title:
          type: string
          description: Name prefix ( Mr. / Ms. / Mrs. etc )
          example: Mr.
        firstName:
          type: string
          description: First name of the user
          example: Virat
        lastName:
          type: string
          description: Last name of the user
          example: Kohli
        addressLine1:
          type: string
          description: Address description
          example: 10 Upper Bank Street
        addressLine2:
          type: string
          description: Address description
          example: Canary Wharf
        addressLine3:
          type: string
          description: Address description
        cityName:
          type: string
          description: City name
          example: London
        stateProvinceCode:
          type: string
          description: State Code
        postalCode:
          type: string
          description: Postal Code
          example: E14 5NP
        countryCode:
          type: string
          description: Country Code
          example: UK
        emailAddress:
          type: string
          description: Valid email address
          example: vk@mastercard.com
        mobilePhoneNumber:
          type: string
          description: Valid mobile phone number
          example: +44 (0) 7970 225 256
        paymentCards:
          type: array
          items:
            $ref: '#/components/schemas/PaymentCardDetails'
        merchantLoyaltyDetails:
          type: array
          items:
            $ref: '#/components/schemas/MemberMerchantLoyaltyDetails'
        loyaltyConnectResponses:
          type: array
          items:
            $ref: '#/components/schemas/LoyaltyConnectResponse'
    PaymentCardDetails:
      required:
        - bankCardNumber
        - bankCardProduct
        - paymentCardReferenceId
      type: object
      properties:
        bankCardNumber:
          type: string
          description: Payment Card number that represents a valid card the MLC user wants to connect
          example: XXXXXXXXXXXX4444
        bankCardProduct:
          type: string
          description: Card product assigned by the Issuer for the payment card
          example: BLACK
        paymentCardReferenceId:
          type: string
          description: Unique reference key for a member's payment card
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
    MemberSearch:
          required:
            - userId
          type: object
          properties:
            userId:
              type: string
              description: Customer Identifier assigned by the Merchant to MLC user
              example: vk@mastercard.com
    MemberDetails:
      type: object
      properties:
        title:
          maxLength: 100
          minLength: 0
          type: string
          description: Name prefix ( Mr. / Ms. / Mrs. etc )
          example: Mr.
        firstName:
          maxLength: 100
          minLength: 0
          type: string
          description: First name of the user
          example: Virat
        lastName:
          maxLength: 100
          minLength: 0
          type: string
          description: Last name of the user
          example: Kohli
        addressLine1:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
          example: 10 Upper Bank Street
        addressLine2:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
          example: Canary Wharf
        addressLine3:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
        cityName:
          maxLength: 100
          minLength: 0
          type: string
          description: City name
          example: London
        stateProvinceCode:
          maxLength: 100
          minLength: 0
          type: string
          description: State Code
        postalCode:
          maxLength: 100
          minLength: 0
          type: string
          description: Postal Code
          example: E14 5NP
        countryCode:
          maxLength: 100
          minLength: 0
          type: string
          description: Country Code
          example: UK
        emailAddress:
          maxLength: 100
          minLength: 0
          type: string
          description: Valid email address
          example: vk@mastercard.com
        mobilePhoneNumber:
          maxLength: 100
          minLength: 0
          type: string
          description: Valid mobile phone number
          example: +44 (0) 7970 225 256
    Member:
      required:
        - partnerCode
        - userId
        - userType
      type: object
      properties:
        title:
          maxLength: 100
          minLength: 0
          type: string
          description: Name prefix ( Mr. / Ms. / Mrs. etc )
          example: Mr.
        firstName:
          maxLength: 100
          minLength: 0
          type: string
          description: First name of the user
          example: Virat
        lastName:
          maxLength: 100
          minLength: 0
          type: string
          description: Last name of the user
          example: Kohli
        addressLine1:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
          example: 10 Upper Bank Street
        addressLine2:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
          example: Canary Wharf
        addressLine3:
          maxLength: 100
          minLength: 0
          type: string
          description: Address description
        cityName:
          maxLength: 100
          minLength: 0
          type: string
          description: City name
          example: London
        stateProvinceCode:
          maxLength: 100
          minLength: 0
          type: string
          description: State Code
        postalCode:
          maxLength: 100
          minLength: 0
          type: string
          description: Postal Code
          example: E14 5NP
        countryCode:
          maxLength: 100
          minLength: 0
          type: string
          description: Country Code
          example: UK
        emailAddress:
          maxLength: 100
          minLength: 0
          type: string
          description: Valid email address
          example: vk@mastercard.com
        mobilePhoneNumber:
          maxLength: 100
          minLength: 0
          type: string
          description: Valid mobile phone number
          example: +44 (0) 7970 225 256
        userId:
          type: string
          description: Customer Identifier assigned by the Merchant to MLC user
          example: vk@mastercard.com
        partnerCode:
          type: string
          description: 'For Merchant, this is the Merchant code assigned by Mastercard to the Merchant. For Issuer, this is the ICA Number – Interbank Card Association Number assigned by Mastercard to the Issuer.'
          example: MLCMerchant
        userType:
          type: string
          description: 'For Merchant, this value has to be ‘MERCHANT_LOYALTY_ID’ For Issuer, this value has to be ‘BANK_CUSTOMER_NUMBER’'
          example: MERCHANT_LOYALTY_ID
    MemberMerchantResponse:
      required:
        - memberMerchantReferenceId
        - memberReferenceId
      type: object
      properties:
        memberReferenceId:
          type: string
          description: Unique reference key for a member
          example: kT87TFbPtw6z100047
        memberMerchantReferenceId:
          type: string
          description: Unique reference key that identifies member and merchant loyalty program association
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
    MerchantLoyaltyProgram:
      required:
        - loyaltyId
        - merchantCode
      type: object
      properties:
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
        merchantCode:
          type: string
          description: Unique code assigned to a merchant on boarded with MLC
          example: MLCMerchant
    MerchantLoyaltyProgramResponse:
      required:
        - loyaltyId
        - memberMerchantReferenceId
      type: object
      properties:
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
        memberMerchantReferenceId:
          type: string
          description: Unique reference key that identifies member and merchant loyalty program association
          example: 3ed6cfa1-f7d9-40ba-9a86-d443ad302ad0
    MerchantLoyaltyProgramSearchResponse:
      required:
        - memberToken
      type: object
      properties:
        memberToken:
          type: string
          description: Unique reference key for a member
          example: kT87TFbPtw6z100047
        memberMerchantLoyaltyDetails:
          type: array
          items:
            $ref: '#/components/schemas/MemberMerchantLoyaltyDetails'
    LoyaltyProgram:
      required:
        - loyaltyId
      type: object
      properties:
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
    Merchant:
      required:
        - merchantCode
        - merchantName
      type: object
      properties:
        merchantName:
          type: string
          description: Merchant Name associated with the Merchant Code.
          example: Liberty
        merchantCode:
          type: string
          description: Unique code assigned to a merchant on boarded with MLC
          example: MLCMerchant
    PaymentCard:
      required:
        - bankCardNumber
        - bankCardProduct
      type: object
      properties:
        bankCardNumber:
          type: string
          description: Payment Card number that represents a valid card the MLC user wants to connect
          example: '5555555555554444'
        bankCardProduct:
          type: string
          description: Card product assigned by the Issuer for the payment card
          example: BLACK
    PaymentCardResponse:
      required:
        - paymentCardReferenceId
      type: object
      properties:
        paymentCardReferenceId:
          type: string
          description: Unique reference key for a member's payment card
          example: 5f0d07c1-6fc4-4e74-9152-0e20bb7104d9
    Transaction:
      required:
        - bankCardNumber
        - keySerialNumber
      type: object
      properties:
        bankCardNumber:
          type: string
          description: Payment Card number that represents a valid card the MLC user wants to connect
          example: 000000014B2E3883F0723361900276A1366153731533059120C18075E4B12160232E7BD698D680EEABF32DA23B4FF0B41E116C3FB0C45AA78F0BF21F9A178F5F79EFE80A851F5B575BB56CA7
        keySerialNumber:
          type: string
          description: Key Serial Number
          example: 4D43544553A9FAE00008
        initialVector:
          type: string
          description: Initial Vector
          example: '0000000000000000'
        merchantTerminalId:
          type: string
          description: Merchant terminal id
          example: MLCMerchant001
        nameOfTheIssuer:
          type: string
          description: Name of the issuer
          example: MLCIssuer
        cardTypePaymentNetworkDetails:
          type: string
          description: Card type / Payment network details
          example: Mastercard / DEBIT MASTERCARD
        merchantLocationId:
          type: string
          description: Merchant location id
          example: LOC1001
    TransactionResponse:
      required:
        - loyaltyId
      type: object
      properties:
        loyaltyId:
          type: string
          description: Loyalty Id represents unique member merchant association
          example: vk@mastercard.com
